// <auto-generated />
using System;
using CollegeERPSystem.Services.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CollegeERPSystem.Services.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220711142243_InitialD")]
    partial class InitialD
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CollegeERPSystem.Services.Domain.Models.Class", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<int?>("Grade")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int?>("ProgramId")
                        .HasColumnType("integer");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.HasKey("Id");

                    b.HasIndex("ProgramId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("CollegeERPSystem.Services.Domain.Models.Org", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Pincode")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Org");
                });

            modelBuilder.Entity("CollegeERPSystem.Services.Domain.Models.Programme", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("integer");

                    b.Property<int?>("Tenure")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("SchoolId");

                    b.ToTable("Programmes");
                });

            modelBuilder.Entity("CollegeERPSystem.Services.Domain.Models.School", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int?>("OrgId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("OrgId");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("CollegeERPSystem.Services.Domain.Models.Student", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<int?>("Batch")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int?>("ClassId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int?>("ProgramId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProgrammeId")
                        .HasColumnType("integer");

                    b.Property<string>("RegistrationNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("ProgrammeId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CollegeERPSystem.Services.Domain.Models.Class", b =>
                {
                    b.HasOne("CollegeERPSystem.Services.Domain.Models.Programme", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramId");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("CollegeERPSystem.Services.Domain.Models.Programme", b =>
                {
                    b.HasOne("CollegeERPSystem.Services.Domain.Models.School", "Schools")
                        .WithMany()
                        .HasForeignKey("SchoolId");

                    b.Navigation("Schools");
                });

            modelBuilder.Entity("CollegeERPSystem.Services.Domain.Models.School", b =>
                {
                    b.HasOne("CollegeERPSystem.Services.Domain.Models.Org", "Organisation")
                        .WithMany()
                        .HasForeignKey("OrgId");

                    b.Navigation("Organisation");
                });

            modelBuilder.Entity("CollegeERPSystem.Services.Domain.Models.Student", b =>
                {
                    b.HasOne("CollegeERPSystem.Services.Domain.Models.Class", "Grade")
                        .WithMany()
                        .HasForeignKey("ClassId");

                    b.HasOne("CollegeERPSystem.Services.Domain.Models.Programme", null)
                        .WithMany("Students")
                        .HasForeignKey("ProgrammeId");

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("CollegeERPSystem.Services.Domain.Models.Programme", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
